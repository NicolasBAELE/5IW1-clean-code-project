datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Moto {
  id                 String        @id @default(cuid())
  model              String
  registrationNumber String        @unique
  mileage            Int
  ownerId            String
  owner              User          @relation(fields: [ownerId], references: [id])
  maintenances       Maintenance[]
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt

  @@index([ownerId])
}

model Maintenance {
  id               String          @id @default(cuid())
  motoId           String
  moto             Moto            @relation(fields: [motoId], references: [id])
  type             MaintenanceType
  scheduledDate    DateTime?
  completedDate    DateTime?
  mileageAtService Int?
  cost             Float?
  notes            String?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt

  @@index([motoId])
}

model Stock {
  id        String   @id @default(cuid())
  name      String
  quantity  Int
  cost      Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("USER")
  phone     String?
  motos     Moto[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  drivers   Driver[]

  @@index([id])
}

model Driver {
  id              String            @id @default(cuid())
  userId          String            @unique
  user            User              @relation(fields: [userId], references: [id])
  licenseNumber   String            @unique
  experienceYears Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  motoTests       MotoTest[]
  incidentHistory IncidentHistory[]

  @@index([userId])
}

model MotoTest {
  id        String    @id @default(cuid())
  driverId  String
  startDate DateTime
  endDate   DateTime?
  driver    Driver    @relation(fields: [driverId], references: [id])
  moto      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([driverId])
}

model IncidentHistory {
  id          String   @id @default(cuid())
  driverId    String
  description String
  date        DateTime
  driver      Driver   @relation(fields: [driverId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([driverId])
}

enum MaintenanceType {
  PREVENTIVE
  CURATIVE
}
